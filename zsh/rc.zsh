# Enable Powerlevel10k instant prompt (must be at the top of .zshrc)
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Function to source files if they exist
source_if_exists() {
    if [ -f "$1" ]; then
        source "$1"
    fi
}

# Install Powerlevel10k if not present
if [ ! -d "${HOME}/powerlevel10k" ]; then
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
fi

# Source Powerlevel10k theme
source ~/powerlevel10k/powerlevel10k.zsh-theme

# Create p10k config file with lean style if it doesn't exist
if [ ! -f "${HOME}/.p10k.zsh" ]; then
    cat > "${HOME}/.p10k.zsh" << 'EOL'
# Generated by Powerlevel10k configuration wizard
'builtin' 'local' '-a' 'p10k_config_opts'
[[ ! -o 'aliases'         ]] || p10k_config_opts+=('aliases')
[[ ! -o 'sh_glob'        ]] || p10k_config_opts+=('sh_glob')
[[ ! -o 'no_brace_expand' ]] || p10k_config_opts+=('no_brace_expand')
'builtin' 'setopt' 'no_aliases' 'no_sh_glob' 'brace_expand'

() {
    emulate -L zsh -o extended_glob
    unset -m '(POWERLEVEL9K_*|DEFAULT_USER)~POWERLEVEL9K_GITSTATUS_DIR'
    
    # Lean style configuration
    typeset -g POWERLEVEL9K_MODE=nerdfont-complete
    typeset -g POWERLEVEL9K_PROMPT_ADD_NEWLINE=true
    typeset -g POWERLEVEL9K_PROMPT_ON_NEWLINE=true
    typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=''
    typeset -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX='%F{blue}❯%f '

    # Basic prompt segments for lean style
    typeset -g POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
        dir                     # current directory
        vcs                     # git status
        command_execution_time  # duration of the last command
        prompt_char            # prompt symbol
    )
    
    typeset -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()
    
    # Directory
    typeset -g POWERLEVEL9K_DIR_BACKGROUND=none
    typeset -g POWERLEVEL9K_DIR_FOREGROUND=blue
    typeset -g POWERLEVEL9K_SHORTEN_STRATEGY=truncate_to_unique
    typeset -g POWERLEVEL9K_SHORTEN_DELIMITER=''
    
    # VCS
    typeset -g POWERLEVEL9K_VCS_BACKGROUND=none
    typeset -g POWERLEVEL9K_VCS_FOREGROUND=green
    
    # Prompt character
    typeset -g POWERLEVEL9K_PROMPT_CHAR_OK_{VIINS,VICMD,VIVIS,VIOWR}_FOREGROUND=blue
    typeset -g POWERLEVEL9K_PROMPT_CHAR_ERROR_{VIINS,VICMD,VIVIS,VIOWR}_FOREGROUND=red

    # Command execution time
    typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=3
    typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND=none
    typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND=yellow
}

(( ${#p10k_config_opts} )) && setopt ${p10k_config_opts[@]}
'builtin' 'unset' 'p10k_config_opts'
EOL
fi

# Source p10k config
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Source environment file first to get DOTFILES path
source_if_exists "$HOME/.env.sh"

# Load functions after environment is sourced
source_if_exists "$DOTFILES/zsh/functions.zsh"

# History configuration
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000
SAVEHIST=10000
setopt EXTENDED_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_VERIFY
setopt INC_APPEND_HISTORY

# Directory stack configuration
setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS
setopt PUSHD_SILENT

# Path configuration
export PATH="$HOME/bin:/usr/local/bin:$PATH"

# Initialize pyenv
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# Load aliases
source_if_exists "$DOTFILES/zsh/aliases.zsh"

# Load dotnet
source_if_exists "$DOTFILES/dotnet/path.zsh"

# Completion system
autoload -Uz compinit
compinit

# Key bindings
bindkey -e
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
bindkey '^[^[[D' backward-word
bindkey '^[^[[C' forward-word
bindkey '^[[H' beginning-of-line
bindkey '^[[F' end-of-line

# Load colors
autoload -U colors && colors

# Enable prompt substitution
setopt PROMPT_SUBST

# Set default Brewfile location for Homebrew
export HOMEBREW_BUNDLE_FILE="$HOME/.Brewfile"

# Source environment file first to get DOTFILES path
source_if_exists "$HOME/.env.sh"

# Install and source zsh-syntax-highlighting
if [ ! -d "${HOME}/.zsh/plugins/zsh-syntax-highlighting" ]; then
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git \
        "${HOME}/.zsh/plugins/zsh-syntax-highlighting"
fi
source "${HOME}/.zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

# Configure highlighting colors
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)
typeset -A ZSH_HIGHLIGHT_STYLES
ZSH_HIGHLIGHT_STYLES[command]='fg=green'
ZSH_HIGHLIGHT_STYLES[unknown-token]='fg=red'

# Run the Brewfile check if it exists
if typeset -f brew_check > /dev/null; then
    brew_check
fi
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# jdk configuration
export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"
export CPPFLAGS="-I/opt/homebrew/opt/openjdk/include"

# pnpm from homebrew
export PNPM_HOME="/opt/homebrew/bin"

# zoxide
eval "$(zoxide init --cmd cd zsh)"

source_if_exists "$DOTFILES/iterm2/zsh/iterm2.zsh"
source_if_exists "$DOTFILES/xxh/zsh/xxh.zsh"
source_if_exists "$DOTFILES/eza/zsh/eza.zsh"
source_if_exists "$DOTFILES/tmux/zsh/tmux.zsh"
source_if_exists "$DOTFILES/alder/zsh/alder.zsh"
source_if_exists "$DOTFILES/bat/zsh/bat.zsh"

zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
export FPATH="/Users/jsegal/.zsh/completions:$FPATH"
export FPATH="/Users/jsegal/.zsh/completions:$FPATH"
export FPATH="/Users/jsegal/.zsh/completions:$FPATH"
# export PATH="/opt/homebrew/anaconda3/bin:$PATH"  # commented out by conda initialize
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/homebrew/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/opt/homebrew/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/opt/homebrew/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

